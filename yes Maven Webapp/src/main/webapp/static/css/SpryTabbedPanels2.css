@charset "UTF-8";

/* SpryTabbedPanels.css - version 0.6 - Spry Pre-Release 1.6.1 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* Horizontal Tabbed Panels
 *
 * The default style for a TabbedPanels widget places all tab buttons
 * (left aligned) above the content panel.
 */

/* This is the selector for the main TabbedPanels container. For our
 * default style, this container does not contribute anything visually,
 * but it is floated left to make sure that any floating or clearing done
 * with any of its child elements are contained completely within the
 * TabbedPanels container, to minimize any impact or undesireable
 * interaction with other floated elements on the page that may be used
 * for layout.
 *
 * If you want to constrain the width of the TabbedPanels widget, set a
 * width on the TabbedPanels container. By default, the TabbedPanels widget
 * expands horizontally to fill up available space.
 *
 * The name of the class ("TabbedPanels") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabbedPanels container.
 */
.TabbedPanels2 {
	margin: 0px;
	clear: none;
	width: 100%; /* IE Hack to force proper layout when preceded by a paragraph. (hasLayout Bug)*/
	position: absolute;
	left: 0px;
	top: 0px;
	overflow: auto;
	height: 100%;
	padding: 0px;
	background-color: #FFF;
}

/* This is the selector for the TabGroup. The TabGroup container houses
 * all of the tab buttons for each tabbed panel in the widget. This container
 * does not contribute anything visually to the look of the widget for our
 * default style.
 *
 * The name of the class ("TabbedPanelsTabGroup") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabGroup container.
 */
 
.TabbedPanelsTabGroup2 {
	margin: 0px;
	padding: 0px;
	position: fixed;
	width: 120px;
	height: 100%;
	background-color: 
	top: 60px;
	float: left;
	bottom: 0px;
	clear: both;
	background-color: #ECECEC;
	background-attachment: fixed;
	background-image: url(../img/leftbackground.png);
	background-repeat: no-repeat;
	background-position: left bottom;
	color: #333;
}

/* This is the selector for the TabbedPanelsTab. This container houses
 * the title for the panel. This is also the tab "button" that the user clicks
 * on to activate the corresponding content panel so that it appears on top
 * of the other tabbed panels contained in the widget.
 *
 * For our default style, each tab is positioned relatively 1 pixel down from
 * where it wold normally render. This allows each tab to overlap the content
 * panel that renders below it. Each tab is rendered with a 1 pixel bottom
 * border that has a color that matches the top border of the current content
 * panel. This gives the appearance that the tab is being drawn behind the
 * content panel.
 *
 * The name of the class ("TabbedPanelsTab") used in this selector is not
 * necessary to make the widget function. You can use any class name you want
 * to style this tab container.
 */
.TabbedPanelsTab2 {
	position: relative;
	background-color: transparent;
	list-style: none;
	-moz-user-select: none;
	-khtml-user-select: none;
	cursor: pointer;
	font-family: "Microsoft YaHei UI";
	font-size: 1em;
	font-weight: normal;
	text-align: center;
	height: 50px;
	width: 100%;
	line-height: 50px;
	top: 80px;
	clip: rect(10px,auto,auto,auto);
	margin-bottom: 20px;
}
.TabbedPanelsTab2 a{
	height: 50px;
	width: 100%;
}


.logo2{
	position: fixed;
	left: 15px;
	top: 13px;
	bottom: 0px;
	z-index: 12;
	margin-right: 20px;
	width: 200px;
	float: left;
}

/* This selector is an example of how to change the appearance of a tab button
 * container after the user has clicked on it to activate a content panel.
 * The class "TabbedPanelsTabSelected" is programatically added and removed
 * from the tab element as the user clicks on the tab button containers in
 * the widget.
 *
 * As mentioned above, for our default style, tab buttons are positioned
 * 1 pixel down from where it would normally render. When the tab button is
 * selected, we change its bottom border to match the background color of the
 * content panel so that it looks like the tab is part of the content panel.
 */
.TabbedPanelsTabSelected2 {
	background-color: rgba(255,255,255,1);
	font-weight: normal;
	border-right-width: medium;
	border-right-style: solid;
	border-right-color: #666;
}

/* This selector is an example of how to make a link inside of a tab button
 * look like normal text. Users may want to use links inside of a tab button
 * so that when it gets focus, the text *inside* the tab button gets a focus
 * ring around it, instead of the focus ring around the entire tab.
 */
.TabbedPanelsTab a2 {
	color: black;
	text-decoration: none;
	position: fixed;
}

/* This is the selector for the ContentGroup. The ContentGroup container houses
 * all of the content panels for each tabbed panel in the widget. For our
 * default style, this container provides the background color and borders that
 * surround the content.
 *
 * The name of the class ("TabbedPanelsContentGroup") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the ContentGroup container.
 */
.TabbedPanelsContentGroup2 {
	background-color: #FFF;
	position: fixed;
	top: 65px;
	width: 100%;
	height: 100%;
	overflow: hidden;
	left: 120px;
	margin: 0px;
	padding: 0px;
	clear: both;
	float: left;
}

/* This is the selector for the Content panel. The Content panel holds the
 * content for a single tabbed panel. For our default style, this container
 * provides some padding, so that the content is not pushed up against the
 * widget borders.
 *
 * The name of the class ("TabbedPanelsContent") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the Content container.
 */
.TabbedPanelsContent2 {
	overflow: auto;
	padding: 0px;
	position: relative;
	width: 100%;
	margin-top: 4px;
	height: 100%;
	top: 4px;
	z-index: 11;
	left: 4px;
}

/* This selector is an example of how to change the appearnce of the currently
 * active container panel. The class "TabbedPanelsContentVisible" is
 * programatically added and removed from the content element as the panel
 * is activated/deactivated.
 */
.TabbedPanelsContentVisible2 {
}

/* Vertical Tabbed Panels
 *
 * The following rules override some of the default rules above so that the
 * TabbedPanels widget renders with its tab buttons along the left side of
 * the currently active content panel.
 *
 * With the rules defined below, the only change that will have to be made
 * to switch a horizontal tabbed panels widget to a vertical tabbed panels
 * widget, is to use the "VTabbedPanels" class on the top-level widget
 * container element, instead of "TabbedPanels".
 */

.VTabbedPanels2 {
	overflow: hidden;
	zoom: 1;
}

/* This selector floats the TabGroup so that the tab buttons it contains
 * render to the left of the active content panel. A border is drawn around
 * the group container to make it look like a list container.
 */
.VTabbedPanels .TabbedPanelsTabGroup2 {
	float: left;
	width: 10em;
	height: 20em;
	background-color: #EEE;
	position: relative;
	border-top: solid 1px #999;
	border-right: solid 1px #999;
	border-left: solid 1px #CCC;
	border-bottom: solid 1px #CCC;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTab2 {
	float: none;
	margin: 0px;
	border-top: none;
	border-left: none;
	border-right: none;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTabSelected2 {
	background-color: #EEE;
	border-bottom: solid 1px #999;
}

/* This selector floats the content panels for the widget so that they
 * render to the right of the tabbed buttons.
 */
.VTabbedPanels .TabbedPanelsContentGroup2 {
	clear: none;
	float: left;
	padding: 0px;
	width: 30em;
	height: 20em;
}

/* Styles for Printing */
@media print {
.TabbedPanels2 {
	overflow: visible !important;
}
.TabbedPanelsContentGroup2 {
	display: block !important;
	overflow: visible !important;
	height: auto !important;
}
.TabbedPanelsContent2 {
	overflow: visible !important;
	display: block !important;
	clear:both !important;
}
.TabbedPanelsTab2 {
	 overflow: visible !important;
	 display: block !important;
	 clear:both !important;
}
}

*{
	margin:0;
	padding:0;
}
body{
	font-family:"Trebuchet MS", "Myriad Pro", Arial, sans-serif;
	font-size:14px;
	background:#fefefe;
	color:#333;
	text-shadow:1px 1px 1px #fff;
	overflow-x:hidden;
}
h1{
	font-size:30px;
	color:#666;
}
h2{
	font-size:20px;
	padding:10px 0px 10px 0px;
	margin:15px 0px 20px 0px;
}
a{
	color:#555;
	text-decoration:none;
}
a:hover{
	color:#222;
}
p{
	padding:5px 0px;
}
.wrapper{
	width:960px;
	margin:20px auto;
}
.clear{
	clear:both;
}

    /* ----------->>> GridView <<<----------*/
        .gridView
        {
            width: 100%;
            clear: both;
            margin: 10px 0;
            border: medium none !important;
            border-collapse: collapse;
        }
        .gridView tr td
        {
            vertical-align: top;
        }
        .gridView thead tr, .footer
        {
            font: bold 11px Arial;
            vertical-align: middle;
            text-decoration: none;
            text-align: center;
        }
        
        /* --->>> HeaderStyle (cabe鏰lho) <<<---*/
        .gridView thead tr
        {
            color: #333;
            background: #fff url(../img/bg-header-grid.png) bottom repeat-x;
            vertical-align: middle;
            height: 25px;
        }
        .gridView thead tr th
        {
            border-top: 1px solid #E2E6E6;
            border-bottom: 3px solid #E5E5E5;
            vertical-align: middle;
        }
        .gridView thead tr a
        {
            font: bold 11px Arial, Verdana;
            color: #333;
            padding: 0 0 0 10px;
            text-decoration: underline;
            background: url(../images/Icones/ico-ordem.gif) left no-repeat;
            vertical-align: middle;
        }
        .gridView thead tr a:hover
        {
            color: #06c;
            background: url(../images/Icones/ico-ordem-hover.gif) left no-repeat;
        }
        
        /* ---->>> FooterStyle (rodap? <<<------*/
        .footer
        {
            height: 20px;
            width: auto;
            margin: 0 auto;
            text-align: center;
            padding: 5px;
        }
        /*PagerStyle*/
        .footer a, .footer span
        {
            color: #555;
            padding: 2px 6px 2px 6px;
            border: 1px solid #bcbcbc;
            background: #F1F1F1 url(../images/bg-pg.png) bottom repeat-x;
            text-decoration: none;
        }
        .footer a:hover
        {
            color: #C40B17;
            background-color: #fff;
            background-image: none;
            border: 1px solid #890812;
        }
        .footer span
        {
            color: #fff;
            background: #D7403F url(../images/bg-pg-focus.png) bottom repeat-x;
            border: 1px solid #890812;
        }
        
        
        /* ------------>>> Grid <<<--------------*/
        .grid, .gridAlternada, .gridDestacada
        {
            font: 11px Arial,Verdana;
            text-align: left;
            text-align: center;
            vertical-align: middle;
        }
        .grid:hover, .gridAlternada:hover, .gridDestacada:hover
        {
            color: #000;
            background: #D4E5F6 url(../images/bg-dia.png) 0 0 repeat-x;
        }
        
        .grid
        {
            background-color: #fff;
        }
        /*RowStyle*/
        .gridAlternada
        {
            background-color: #eee;
        }
        /*AlternatingRowStyle*/
        .gridDestacada
        {
            background-color: #FFE082;
            color: #333;
        }
        /*SelectedRowStyle / EditRowStyle*/
        
        
        /* -------->>> Link Grid's <<<-----------*/
        .grid a, .gridAlternada a, .gridDestacada a
        {
            color: #384249;
            text-decoration: none;
        }
        .grid a:hover, .gridAlternada a:hover, .gridDestacada a:hover
        {
            color: #000;
            text-decoration: underline;
        }
   
